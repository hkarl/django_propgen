name: HTTP
version: 4000.3.9
id: HTTP-4000.3.9-C8E1H6XtvXaJOEza8QbuE3
key: HTTP-4000.3.9-C8E1H6XtvXaJOEza8QbuE3
license: BSD3
maintainer: Ganesh Sittampalam <ganesh@earth.li>
homepage: https://github.com/haskell/HTTP
synopsis: A library for client-side HTTP
description:
    The HTTP package supports client-side web programming in Haskell. It lets you set up
    HTTP connections, transmitting requests and processing the responses coming back, all
    from within the comforts of Haskell. It's dependent on the network package to operate,
    but other than that, the implementation is all written in Haskell.
    .
    A basic API for issuing single HTTP requests + receiving responses is provided. On top
    of that, a session-level abstraction is also on offer  (the @BrowserAction@ monad);
    it taking care of handling the management of persistent connections, proxies,
    state (cookies) and authentication credentials required to handle multi-step
    interactions with a web server.
    .
    The representation of the bytes flowing across is extensible via the use of a type class,
    letting you pick the representation of requests and responses that best fits your use.
    Some pre-packaged, common instances are provided for you (@ByteString@, @String@).
    .
    Here's an example use:
    .
    >
    >    do
    >      rsp <- Network.HTTP.simpleHTTP (getRequest "http://www.haskell.org/")
    >              -- fetch document and return it (as a 'String'.)
    >      fmap (take 100) (getResponseBody rsp)
    >
    >    do
    >      (_, rsp)
    >         <- Network.Browser.browse $ do
    >               setAllowRedirects True -- handle HTTP redirects
    >               request $ getRequest "http://www.haskell.org/"
    >      return (take 100 (rspBody rsp))
    .
    __Note:__ This package does not support HTTPS connections.
    If you need HTTPS, take a look at the following packages:
    .
    * <http://hackage.haskell.org/package/http-streams http-streams>
    .
    * <http://hackage.haskell.org/package/http-client http-client> (in combination with
    <http://hackage.haskell.org/package/http-client-tls http-client-tls>)
    .
    * <http://hackage.haskell.org/package/req req>
    .
    * <http://hackage.haskell.org/package/wreq wreq>
    .
category: Network
author: Warrick Gray <warrick.gray@hotmail.com>
exposed: True
exposed-modules:
    Network.BufferType Network.Stream Network.StreamDebugger
    Network.StreamSocket Network.TCP Network.HTTP Network.HTTP.Headers
    Network.HTTP.Base Network.HTTP.Stream Network.HTTP.Auth
    Network.HTTP.Cookie Network.HTTP.Proxy Network.HTTP.HandleStream
    Network.Browser
hidden-modules: Network.HTTP.Base64 Network.HTTP.MD5Aux
                Network.HTTP.Utils Paths_HTTP
abi: 72a41c40a4619e9babf9b32da26d7d72
trusted: False
import-dirs: /pandoc/.cabal-sandbox/lib/x86_64-linux-ghc-8.0.2/HTTP-4000.3.9-C8E1H6XtvXaJOEza8QbuE3
library-dirs: /pandoc/.cabal-sandbox/lib/x86_64-linux-ghc-8.0.2/HTTP-4000.3.9-C8E1H6XtvXaJOEza8QbuE3
dynamic-library-dirs: /pandoc/.cabal-sandbox/lib/x86_64-linux-ghc-8.0.2
data-dir: /pandoc/.cabal-sandbox/share/x86_64-linux-ghc-8.0.2/HTTP-4000.3.9
hs-libraries: HSHTTP-4000.3.9-C8E1H6XtvXaJOEza8QbuE3
depends:
    array-0.5.1.1 base-4.9.1.0 bytestring-0.10.8.1
    mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
    network-2.6.3.2-IsLM4TXcLoRI0fmmBYVyQz
    network-uri-2.6.1.0-3xBG0bO1ZdnoGmhziCbLM
    parsec-3.1.11-Cr8RO0WBQBF8IB9GK605IR time-1.6.0.1
haddock-interfaces: /pandoc/.cabal-sandbox/share/doc/x86_64-linux-ghc-8.0.2/HTTP-4000.3.9/html/HTTP.haddock
haddock-html: /pandoc/.cabal-sandbox/share/doc/x86_64-linux-ghc-8.0.2/HTTP-4000.3.9/html
